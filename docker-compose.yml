version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: hodei_postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: hodei_policies
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Adminer - Herramienta ligera y rápida para gestionar PostgreSQL
  # Acceso: http://localhost:8080
  # Usuario: postgres | Password: postgres | Base de datos: hodei_policies
  adminer:
    image: adminer:latest
    container_name: hodei_adminer
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      ADMINER_DEFAULT_SERVER: postgres
      ADMINER_DESIGN: pepa-linha-dark
    depends_on:
      - postgres

  # pgAdmin - Herramienta completa para gestionar PostgreSQL (más pesada)
  # Acceso: http://localhost:5050
  # Email: admin@hodei.com | Password: admin
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: hodei_pgadmin
    restart: unless-stopped
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@hodei.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres

  redis:
    image: redis:7-alpine
    container_name: hodei_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: hodei_app
    environment:
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/hodei_policies
      REDIS_URL: redis://redis:6379
      RUST_LOG: info
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./cedar_schema.json:/app/cedar_schema.json:ro

volumes:
  postgres_data:
  pgadmin_data:
  redis_data:
