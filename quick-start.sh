#!/bin/bash

# Script de inicio r√°pido para Hodei Authorization Engine
set -e

echo "üöÄ Hodei Authorization Engine - Quick Start"
echo "==========================================="
echo ""

# Verificar Docker
if ! command -v docker &> /dev/null; then
    echo "‚ùå Docker no est√° instalado. Por favor instala Docker primero."
    exit 1
fi

if ! command -v docker-compose &> /dev/null; then
    echo "‚ùå Docker Compose no est√° instalado. Por favor instala Docker Compose primero."
    exit 1
fi

echo "‚úÖ Docker y Docker Compose detectados"
echo ""

# Verificar si los servicios ya est√°n corriendo
if docker-compose ps | grep -q "Up"; then
    echo "‚ö†Ô∏è  Los servicios ya est√°n corriendo. Deteni√©ndolos..."
    docker-compose down
    echo ""
fi

# Levantar servicios
echo "üê≥ Levantando servicios con Docker Compose..."
docker-compose up -d

echo ""
echo "‚è≥ Esperando a que PostgreSQL est√© listo..."
sleep 5

# Verificar que PostgreSQL est√© listo
until docker-compose exec -T postgres pg_isready -U postgres > /dev/null 2>&1; do
    echo "   Esperando PostgreSQL..."
    sleep 2
done

echo "‚úÖ PostgreSQL est√° listo!"
echo ""

echo "‚è≥ Esperando a que la aplicaci√≥n est√© lista..."
sleep 10

# Verificar que la aplicaci√≥n responda
MAX_RETRIES=30
RETRY_COUNT=0
until curl -s http://localhost:3000/health > /dev/null 2>&1 || [ $RETRY_COUNT -eq $MAX_RETRIES ]; do
    echo "   Esperando aplicaci√≥n... ($RETRY_COUNT/$MAX_RETRIES)"
    sleep 2
    ((RETRY_COUNT++))
done

if [ $RETRY_COUNT -eq $MAX_RETRIES ]; then
    echo "‚ùå La aplicaci√≥n no respondi√≥ a tiempo. Verificando logs..."
    docker-compose logs app
    exit 1
fi

echo "‚úÖ Aplicaci√≥n est√° lista!"
echo ""

# Ejecutar tests
echo "üß™ Ejecutando tests de API..."
echo ""
./tests/api_tests.sh

TEST_RESULT=$?

echo ""
echo "==========================================="
echo "üìä Resumen"
echo "==========================================="
echo ""

if [ $TEST_RESULT -eq 0 ]; then
    echo "‚úÖ ¬°Todo funcionando correctamente!"
    echo ""
    echo "üåê La aplicaci√≥n est√° corriendo en: http://localhost:3000"
    echo ""
    echo "üìö Comandos √∫tiles:"
    echo "   make logs-app      # Ver logs de la aplicaci√≥n"
    echo "   make logs-db       # Ver logs de PostgreSQL"
    echo "   make docker-down   # Detener servicios"
    echo "   make test          # Ejecutar tests nuevamente"
    echo ""
    echo "üß™ Prueba la API:"
    echo "   curl -X POST http://localhost:3000/documents \\"
    echo "     -H 'Authorization: Bearer alice' \\"
    echo "     -H 'Content-Type: application/json' \\"
    echo "     -d '{\"resource_id\":\"test\",\"is_public\":false}'"
    echo ""
else
    echo "‚ùå Algunos tests fallaron. Revisa los logs:"
    echo "   make logs-app"
    echo ""
fi

exit $TEST_RESULT
